version: 2
jobs:
  build:
    working_directory: ~/metabase/metabase
    parallelism: 7
    shell: /bin/bash --login
    environment:
      CIRCLE_ARTIFACTS: /tmp/circleci-artifacts
      CIRCLE_TEST_REPORTS: /tmp/circleci-test-results
      TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    docker:
    - image: circleci/clojure:lein-2.8.1-node
    - image: postgres:9.6.10-alpine
      environment:
        TZ: "/usr/share/zoneinfo/America/Los_Angeles"
    - image: mysql:5.7.23
      environment:
        TZ: "/usr/share/zoneinfo/America/Los_Angeles"
        MYSQL_ALLOW_EMPTY_PASSWORD: yes
    steps:
    - run:
        name: What's our node version?
        command: >
          node --version
    # Machine Setup
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
    # The following `checkout` command checks out your code to your working directory. In 1.0 we did this implicitly. In 2.0 you can choose where in the course of a job your code should be checked out.
    - checkout
    # Prepare for artifact and test results  collection equivalent to how it was done on 1.0.
    # In many cases you can simplify this from what is generated here.
    # 'See docs on artifact collection here https://circleci.com/docs/2.0/artifacts/'
    - run:
        name: Make Circle artifact directories
        command:  mkdir -p $CIRCLE_ARTIFACTS $CIRCLE_TEST_REPORTS
    # Test
    #   This would typically be a build job when using workflows, possibly combined with build
    # This is based on your 1.0 configuration file or project settings
    - run:
        name: Run ./bin/ci
        command: "./bin/ci"
    # Deployment
    # Your existing circle.yml file contains deployment steps.
    # The config translation tool does not support translating deployment steps
    # since deployment in CircleCI 2.0 are better handled through workflows.
    # See the documentation for more information https://circleci.com/docs/2.0/workflows/
    # Teardown
    #   If you break your build into multiple jobs with workflows, you will probably want to do the parts of this that are relevant in each
    # Save test results
    - store_test_results:
        path: /tmp/circleci-test-results
    # Save artifacts
    - store_artifacts:
        path: /tmp/circleci-artifacts
    - store_artifacts:
        path: target/uberjar/metabase.jar
    - store_artifacts:
        path: screenshots
    - store_artifacts:
        path: /tmp/circleci-test-results
